/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_shamir3passconfigprequest_free: (a: number, b: number) => void;
export const __wbg_get_shamir3passconfigprequest_p_b64u: (a: number) => [number, number];
export const __wbg_set_shamir3passconfigprequest_p_b64u: (a: number, b: number, c: number) => void;
export const __wbg_shamir3passconfigserverurlsrequest_free: (a: number, b: number) => void;
export const __wbg_get_shamir3passconfigserverurlsrequest_applyLockRoute: (a: number) => [number, number];
export const __wbg_set_shamir3passconfigserverurlsrequest_applyLockRoute: (a: number, b: number, c: number) => void;
export const __wbg_get_shamir3passconfigserverurlsrequest_removeLockRoute: (a: number) => [number, number];
export const __wbg_set_shamir3passconfigserverurlsrequest_removeLockRoute: (a: number, b: number, c: number) => void;
export const __wbg_generatevrfchallengerequest_free: (a: number, b: number) => void;
export const __wbg_get_generatevrfchallengerequest_vrfInputData: (a: number) => number;
export const __wbg_set_generatevrfchallengerequest_vrfInputData: (a: number, b: number) => void;
export const __wbg_generatevrfkeypairbootstraprequest_free: (a: number, b: number) => void;
export const __wbg_get_generatevrfkeypairbootstraprequest_vrfInputData: (a: number) => number;
export const __wbg_set_generatevrfkeypairbootstraprequest_vrfInputData: (a: number, b: number) => void;
export const __wbg_get_shamir3passconfigserverurlsrequest_relayServerUrl: (a: number) => [number, number];
export const __wbg_set_shamir3passconfigserverurlsrequest_relayServerUrl: (a: number, b: number, c: number) => void;
export const __wbg_derivevrfkeypairfromprfrequest_free: (a: number, b: number) => void;
export const __wbg_get_derivevrfkeypairfromprfrequest_prfOutput: (a: number) => [number, number];
export const __wbg_set_derivevrfkeypairfromprfrequest_prfOutput: (a: number, b: number, c: number) => void;
export const __wbg_get_derivevrfkeypairfromprfrequest_nearAccountId: (a: number) => [number, number];
export const __wbg_set_derivevrfkeypairfromprfrequest_nearAccountId: (a: number, b: number, c: number) => void;
export const __wbg_get_derivevrfkeypairfromprfrequest_saveInMemory: (a: number) => number;
export const __wbg_set_derivevrfkeypairfromprfrequest_saveInMemory: (a: number, b: number) => void;
export const __wbg_get_derivevrfkeypairfromprfrequest_vrfInputData: (a: number) => number;
export const __wbg_set_derivevrfkeypairfromprfrequest_vrfInputData: (a: number, b: number) => void;
export const __wbg_deterministicvrfkeypairresponse_free: (a: number, b: number) => void;
export const __wbg_get_deterministicvrfkeypairresponse_vrfChallengeData: (a: number) => number;
export const __wbg_set_deterministicvrfkeypairresponse_vrfChallengeData: (a: number, b: number) => void;
export const __wbg_get_deterministicvrfkeypairresponse_encryptedVrfKeypair: (a: number) => number;
export const __wbg_set_deterministicvrfkeypairresponse_encryptedVrfKeypair: (a: number, b: number) => void;
export const __wbg_get_deterministicvrfkeypairresponse_serverEncryptedVrfKeypair: (a: number) => number;
export const __wbg_set_deterministicvrfkeypairresponse_serverEncryptedVrfKeypair: (a: number, b: number) => void;
export const __wbg_get_deterministicvrfkeypairresponse_success: (a: number) => number;
export const __wbg_set_deterministicvrfkeypairresponse_success: (a: number, b: number) => void;
export const __wbg_set_deterministicvrfkeypairresponse_vrfPublicKey: (a: number, b: number, c: number) => void;
export const __wbg_get_deterministicvrfkeypairresponse_vrfPublicKey: (a: number) => [number, number];
export const __wbg_shamirapplyserverlockhttprequest_free: (a: number, b: number) => void;
export const __wbg_get_shamirapplyserverlockhttprequest_kek_c_b64u: (a: number) => [number, number];
export const __wbg_set_shamirapplyserverlockhttprequest_kek_c_b64u: (a: number, b: number, c: number) => void;
export const __wbg_shamirapplyserverlockhttpresponse_free: (a: number, b: number) => void;
export const __wbg_shamirremoveserverlockhttprequest_free: (a: number, b: number) => void;
export const __wbg_shamirremoveserverlockhttpresponse_free: (a: number, b: number) => void;
export const __wbg_get_shamirapplyserverlockhttpresponse_kek_cs_b64u: (a: number) => [number, number];
export const __wbg_get_shamirremoveserverlockhttprequest_kek_cs_b64u: (a: number) => [number, number];
export const __wbg_get_shamirremoveserverlockhttpresponse_kek_c_b64u: (a: number) => [number, number];
export const __wbg_set_shamirapplyserverlockhttpresponse_kek_cs_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_shamirremoveserverlockhttprequest_kek_cs_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_shamirremoveserverlockhttpresponse_kek_c_b64u: (a: number, b: number, c: number) => void;
export const __wbg_shamir3passclientencryptcurrentvrfkeypairrequest_free: (a: number, b: number) => void;
export const __wbg_shamir3passclientdecryptvrfkeypairrequest_free: (a: number, b: number) => void;
export const __wbg_get_shamir3passclientdecryptvrfkeypairrequest_ciphertextVrfB64u: (a: number) => [number, number];
export const __wbg_set_shamir3passclientdecryptvrfkeypairrequest_ciphertextVrfB64u: (a: number, b: number, c: number) => void;
export const __wbg_shamir3passencryptvrfkeypairresult_free: (a: number, b: number) => void;
export const __wbg_encryptedvrfkeypair_free: (a: number, b: number) => void;
export const __wbg_get_encryptedvrfkeypair_encryptedVrfDataB64u: (a: number) => [number, number];
export const __wbg_set_encryptedvrfkeypair_encryptedVrfDataB64u: (a: number, b: number, c: number) => void;
export const __wbg_get_encryptedvrfkeypair_chacha20NonceB64u: (a: number) => [number, number];
export const __wbg_set_encryptedvrfkeypair_chacha20NonceB64u: (a: number, b: number, c: number) => void;
export const __wbg_vrfinputdata_free: (a: number, b: number) => void;
export const __wbg_vrfchallengedata_free: (a: number, b: number) => void;
export const __wbg_get_vrfchallengedata_vrfPublicKey: (a: number) => [number, number];
export const __wbg_set_vrfchallengedata_vrfPublicKey: (a: number, b: number, c: number) => void;
export const __wbg_get_vrfchallengedata_userId: (a: number) => [number, number];
export const __wbg_set_vrfchallengedata_userId: (a: number, b: number, c: number) => void;
export const __wbg_get_vrfchallengedata_rpId: (a: number) => [number, number];
export const __wbg_set_vrfchallengedata_rpId: (a: number, b: number, c: number) => void;
export const __wbg_get_vrfchallengedata_blockHeight: (a: number) => [number, number];
export const __wbg_set_vrfchallengedata_blockHeight: (a: number, b: number, c: number) => void;
export const __wbg_get_vrfchallengedata_blockHash: (a: number) => [number, number];
export const __wbg_set_vrfchallengedata_blockHash: (a: number, b: number, c: number) => void;
export const __wbg_get_shamir3passencryptvrfkeypairresult_ciphertextVrfB64u: (a: number) => [number, number];
export const __wbg_get_shamir3passencryptvrfkeypairresult_kek_s_b64u: (a: number) => [number, number];
export const __wbg_get_shamir3passencryptvrfkeypairresult_vrfPublicKey: (a: number) => [number, number];
export const __wbg_get_shamir3passclientdecryptvrfkeypairrequest_nearAccountId: (a: number) => [number, number];
export const __wbg_get_shamir3passclientdecryptvrfkeypairrequest_kek_s_b64u: (a: number) => [number, number];
export const __wbg_get_vrfinputdata_userId: (a: number) => [number, number];
export const __wbg_get_vrfinputdata_rpId: (a: number) => [number, number];
export const __wbg_get_vrfinputdata_blockHeight: (a: number) => [number, number];
export const __wbg_get_vrfchallengedata_vrfInput: (a: number) => [number, number];
export const __wbg_get_vrfchallengedata_vrfOutput: (a: number) => [number, number];
export const __wbg_get_vrfchallengedata_vrfProof: (a: number) => [number, number];
export const __wbg_get_vrfinputdata_blockHash: (a: number) => [number, number];
export const __wbg_set_shamir3passencryptvrfkeypairresult_ciphertextVrfB64u: (a: number, b: number, c: number) => void;
export const __wbg_set_shamir3passencryptvrfkeypairresult_kek_s_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_shamir3passencryptvrfkeypairresult_vrfPublicKey: (a: number, b: number, c: number) => void;
export const __wbg_set_shamir3passclientdecryptvrfkeypairrequest_nearAccountId: (a: number, b: number, c: number) => void;
export const __wbg_set_shamir3passclientdecryptvrfkeypairrequest_kek_s_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfinputdata_userId: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfinputdata_rpId: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfinputdata_blockHeight: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfchallengedata_vrfInput: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfchallengedata_vrfOutput: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfchallengedata_vrfProof: (a: number, b: number, c: number) => void;
export const __wbg_set_vrfinputdata_blockHash: (a: number, b: number, c: number) => void;
export const SHAMIR_P_B64U: () => [number, number];
export const get_shamir_p_b64u: () => [number, number];
export const __wbg_shamir3passgenerateserverkeypairrequest_free: (a: number, b: number) => void;
export const __wbg_shamir3passapplyserverlockrequest_free: (a: number, b: number) => void;
export const __wbg_get_shamir3passapplyserverlockrequest_e_s_b64u: (a: number) => [number, number];
export const __wbg_set_shamir3passapplyserverlockrequest_e_s_b64u: (a: number, b: number, c: number) => void;
export const __wbg_get_shamir3passapplyserverlockrequest_kek_c_b64u: (a: number) => [number, number];
export const __wbg_set_shamir3passapplyserverlockrequest_kek_c_b64u: (a: number, b: number, c: number) => void;
export const __wbg_shamir3passremoveserverlockrequest_free: (a: number, b: number) => void;
export const __wbg_unlockvrfkeypairrequest_free: (a: number, b: number) => void;
export const __wbg_get_unlockvrfkeypairrequest_encryptedVrfKeypair: (a: number) => number;
export const __wbg_set_unlockvrfkeypairrequest_encryptedVrfKeypair: (a: number, b: number) => void;
export const __wbg_get_unlockvrfkeypairrequest_prfKey: (a: number) => [number, number];
export const __wbg_set_unlockvrfkeypairrequest_prfKey: (a: number, b: number, c: number) => void;
export const main: () => void;
export const configure_shamir_p: (a: number, b: number) => [number, number];
export const configure_shamir_server_urls: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const handle_message: (a: any) => any;
export const __wbg_get_shamir3passremoveserverlockrequest_d_s_b64u: (a: number) => [number, number];
export const __wbg_get_shamir3passremoveserverlockrequest_kek_cs_b64u: (a: number) => [number, number];
export const __wbg_get_unlockvrfkeypairrequest_nearAccountId: (a: number) => [number, number];
export const __wbg_set_shamir3passremoveserverlockrequest_d_s_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_shamir3passremoveserverlockrequest_kek_cs_b64u: (a: number, b: number, c: number) => void;
export const __wbg_set_unlockvrfkeypairrequest_nearAccountId: (a: number, b: number, c: number) => void;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const closure119_externref_shim: (a: number, b: number, c: any) => void;
export const closure183_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
