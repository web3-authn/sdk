{"version":3,"file":"TransactionSettingsSection.js","names":["TransactionSettingsSection: React.FC<TransactionSettingsSectionProps>"],"sources":["../../../../../src/react/components/ProfileSettingsButton/TransactionSettingsSection.tsx"],"sourcesContent":["import React from 'react';\nimport { Toggle } from './Toggle';\nimport { Slider } from './Slider';\nimport type { TransactionSettingsSectionProps } from './types';\n\nexport const TransactionSettingsSection: React.FC<TransactionSettingsSectionProps> = ({\n  currentConfirmConfig,\n  onToggleShowDetails,\n  onToggleSkipClick,\n  onSetDelay,\n  onToggleTheme,\n  className,\n  style,\n  isOpen = true,\n  theme = 'dark'\n}) => {\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  const disableDelaySlider = currentConfirmConfig?.uiMode !== 'modal'\n    || currentConfirmConfig?.behavior !== 'autoProceed'\n\n  const disableRequireClick = currentConfirmConfig?.uiMode !== 'modal'\n\n  return (\n    <div\n      className={`w3a-dropdown-tx-settings-root ${isOpen ? 'is-expanded' : ''} ${className || ''}`}\n      style={style}\n      onClick={handleClick}\n    >\n      <div className=\"w3a-dropdown-toggle-tx-settings\">\n        <div className=\"w3a-dropdown-toggle-tx-settings-content\">\n          <div style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 8\n          }}>\n            {onToggleTheme && (\n              <div>\n                <Toggle\n                  checked={currentConfirmConfig?.theme === 'dark'}\n                  onChange={onToggleTheme}\n                  label=\"Dark mode\"\n                  size=\"large\"\n                  textPosition=\"left\"\n                  theme={theme}\n                />\n              </div>\n            )}\n            <Toggle\n              checked={currentConfirmConfig?.uiMode === 'modal'}\n              onChange={onToggleShowDetails}\n              label=\"Show confirm modal\"\n              size=\"large\"\n              textPosition=\"left\"\n              theme={theme}\n            />\n            <div style={{\n              opacity: disableRequireClick ? 0.6 : 1,\n              pointerEvents: disableRequireClick ? 'none' : 'auto'\n            }}>\n              <Toggle\n                checked={currentConfirmConfig?.behavior === 'autoProceed'}\n                onChange={onToggleSkipClick}\n                label=\"Auto-skip modal\"\n                size=\"large\"\n                textPosition=\"left\"\n                disabled={disableRequireClick}\n                theme={theme}\n              />\n            </div>\n            <Slider\n              disabled={disableDelaySlider}\n              min={0}\n              max={6}\n              step={1}\n              value={Math.round((currentConfirmConfig?.autoProceedDelay ?? 1000) / 500)}\n              onChange={(v) => onSetDelay(v * 500)}\n              theme={theme}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;;;;;AAKA,MAAaA,8BAAyE,EACpF,sBACA,qBACA,mBACA,YACA,eACA,WACA,OACA,SAAS,MACT,QAAQ,aACJ;CAEJ,MAAM,eAAe,MAAwB;AAC3C,IAAE;;CAGJ,MAAM,qBAAqB,sBAAsB,WAAW,WACvD,sBAAsB,aAAa;CAExC,MAAM,sBAAsB,sBAAsB,WAAW;AAE7D,QACE,oBAAC;EACC,WAAW,iCAAiC,SAAS,gBAAgB,GAAG,GAAG,aAAa;EACjF;EACP,SAAS;YAET,oBAAC;GAAI,WAAU;aACb,oBAAC;IAAI,WAAU;cACb,qBAAC;KAAI,OAAO;MACV,OAAO;MACP,SAAS;MACT,eAAe;MACf,KAAK;;;MAEJ,iBACC,oBAAC,mBACC,oBAAC;OACC,SAAS,sBAAsB,UAAU;OACzC,UAAU;OACV,OAAM;OACN,MAAK;OACL,cAAa;OACN;;MAIb,oBAAC;OACC,SAAS,sBAAsB,WAAW;OAC1C,UAAU;OACV,OAAM;OACN,MAAK;OACL,cAAa;OACN;;MAET,oBAAC;OAAI,OAAO;QACV,SAAS,sBAAsB,KAAM;QACrC,eAAe,sBAAsB,SAAS;;iBAE9C,oBAAC;QACC,SAAS,sBAAsB,aAAa;QAC5C,UAAU;QACV,OAAM;QACN,MAAK;QACL,cAAa;QACb,UAAU;QACH;;;MAGX,oBAAC;OACC,UAAU;OACV,KAAK;OACL,KAAK;OACL,MAAM;OACN,OAAO,KAAK,OAAO,sBAAsB,oBAAoB,OAAQ;OACrE,WAAW,MAAM,WAAW,IAAI;OACzB"}