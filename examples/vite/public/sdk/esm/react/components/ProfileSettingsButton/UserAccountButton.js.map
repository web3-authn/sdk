{"version":3,"file":"UserAccountButton.js","names":["UserAccountButton: React.FC<UserAccountButtonProps>","onKeyDown: React.KeyboardEventHandler<HTMLDivElement>","TouchIcon"],"sources":["../../../../../src/react/components/ProfileSettingsButton/UserAccountButton.tsx"],"sourcesContent":["\nimport TouchIcon from './TouchIcon';\nimport type { UserAccountButtonProps } from './types';\n\nexport const UserAccountButton: React.FC<UserAccountButtonProps> = ({\n  username,\n  fullAccountId,\n  isOpen,\n  onClick,\n  isHovered,\n  onMouseEnter,\n  onMouseLeave,\n  nearExplorerBaseUrl,\n  theme = 'dark',\n  menuId,\n  triggerId,\n}) => {\n  const onKeyDown: React.KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      onClick();\n    }\n  };\n  return (\n    <div className={`w3a-user-account-button-root ${theme}`}>\n      <div\n        id={triggerId}\n        className={`w3a-user-account-button-trigger ${isOpen ? 'open' : 'closed'}`}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex={0}\n        aria-haspopup=\"menu\"\n        aria-expanded={isOpen}\n        {...(menuId ? { 'aria-controls': menuId } as any : {})}\n        onKeyDown={onKeyDown}\n        {...(onMouseEnter && { onMouseEnter })}\n        {...(onMouseLeave && { onMouseLeave })}\n      >\n        <div className=\"w3a-user-account--user-content\">\n          <div className={`w3a-user-account--avatar ${isOpen ? 'expanded' : 'shrunk'}`}>\n            <TouchIcon\n              className={`w3a-user-account--gear-icon ${isOpen ? 'open' : 'closed'}`}\n              strokeWidth={1.4}\n            />\n          </div>\n          <UserAccountId\n            username={username}\n            fullAccountId={fullAccountId}\n            isOpen={isOpen}\n            nearExplorerBaseUrl={nearExplorerBaseUrl}\n            theme={theme}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const UserAccountId = ({\n  username,\n  fullAccountId,\n  isOpen,\n  nearExplorerBaseUrl,\n  theme = 'dark'\n}: {\n  username: string;\n  fullAccountId?: string;\n  isOpen: boolean;\n  nearExplorerBaseUrl?: string;\n  theme?: 'dark' | 'light';\n}) => {\n  // Use the full account ID if provided, otherwise fall back to constructed version\n  const displayAccountId = fullAccountId || `${username}`;\n\n  return (\n    <div className=\"w3a-user-account--user-details\">\n      <p className=\"w3a-user-account--username\">\n        {username || 'User'}\n      </p>\n      <a\n        href={username ? `${nearExplorerBaseUrl}/address/${displayAccountId}` : '#'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={`w3a-user-account--account-id ${isOpen ? 'visible' : 'hidden'}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {displayAccountId || 'user@example.com'}\n      </a>\n    </div>\n  );\n};\n"],"mappings":";;;;AAIA,MAAaA,qBAAuD,EAClE,UACA,eACA,QACA,SACA,WACA,cACA,cACA,qBACA,QAAQ,QACR,QACA,gBACI;CACJ,MAAMC,aAAyD,MAAM;AACnE,MAAI,EAAE,QAAQ,WAAW,EAAE,QAAQ,KAAK;AACtC,KAAE;AACF;;;AAGJ,QACE,oBAAC;EAAI,WAAW,gCAAgC;YAC9C,oBAAC;GACC,IAAI;GACJ,WAAW,mCAAmC,SAAS,SAAS;GACvD;GACT,MAAK;GACL,UAAU;GACV,iBAAc;GACd,iBAAe;GACf,GAAK,SAAS,EAAE,iBAAiB,WAAkB;GACxC;GACX,GAAK,gBAAgB,EAAE;GACvB,GAAK,gBAAgB,EAAE;aAEvB,qBAAC;IAAI,WAAU;eACb,oBAAC;KAAI,WAAW,4BAA4B,SAAS,aAAa;eAChE,oBAACC;MACC,WAAW,+BAA+B,SAAS,SAAS;MAC5D,aAAa;;QAGjB,oBAAC;KACW;KACK;KACP;KACa;KACd;;;;;;AAQnB,MAAa,iBAAiB,EAC5B,UACA,eACA,QACA,qBACA,QAAQ,aAOJ;CAEJ,MAAM,mBAAmB,iBAAiB,GAAG;AAE7C,QACE,qBAAC;EAAI,WAAU;aACb,oBAAC;GAAE,WAAU;aACV,YAAY;MAEf,oBAAC;GACC,MAAM,WAAW,GAAG,oBAAoB,WAAW,qBAAqB;GACxE,QAAO;GACP,KAAI;GACJ,WAAW,gCAAgC,SAAS,YAAY;GAChE,UAAU,MAAM,EAAE;aAEjB,oBAAoB"}