{"version":3,"file":"extractCosePublicKey.js","names":["error: any"],"sources":["../../../../../../../../../../src/core/WebAuthnManager/SignerWorkerManager/handlers/extractCosePublicKey.ts"],"sourcesContent":["\nimport { WorkerRequestType, isExtractCosePublicKeySuccess } from '../../../types/signer-worker';\nimport { SignerWorkerManagerContext } from '..';\n\n\n/**\n * Extract COSE public key from WebAuthn attestation object\n * Simple operation that doesn't require TouchID or progress updates\n */\nexport async function extractCosePublicKey({ ctx, attestationObjectBase64url }: {\n  ctx: SignerWorkerManagerContext;\n  attestationObjectBase64url: string;\n}): Promise<Uint8Array> {\n  try {\n    const response = await ctx.sendMessage<WorkerRequestType.ExtractCosePublicKey>({\n      message: {\n        type: WorkerRequestType.ExtractCosePublicKey,\n        payload: {\n          attestationObjectBase64url\n        }\n      }\n    });\n\n    if (isExtractCosePublicKeySuccess(response)) {\n      return response.payload.cosePublicKeyBytes;\n    } else {\n      throw new Error('COSE public key extraction failed in WASM worker');\n    }\n  } catch (error: any) {\n    throw error;\n  }\n}"],"mappings":";;;;;;;;AASA,eAAsB,qBAAqB,EAAE,KAAK,8BAG1B;AACtB,KAAI;EACF,MAAM,WAAW,MAAM,IAAI,YAAoD,EAC7E,SAAS;GACP,MAAM,kBAAkB;GACxB,SAAS,EACP;;AAKN,MAAI,8BAA8B,UAChC,QAAO,SAAS,QAAQ;MAExB,OAAM,IAAI,MAAM;UAEXA,OAAY;AACnB,QAAM"}