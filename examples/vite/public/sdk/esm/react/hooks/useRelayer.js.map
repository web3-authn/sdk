{"version":3,"file":"useRelayer.js","names":["useRelayer"],"sources":["../../../../src/react/hooks/useRelayer.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport interface UseRelayerOptions {\n  initialValue?: boolean;\n}\n\nexport interface UseRelayerReturn {\n  useRelayer: boolean;\n  setUseRelayer: (value: boolean) => void;\n  toggleRelayer: () => void;\n}\n\n/**\n * Hook for managing relayer usage state\n *\n * @param options - Configuration options\n * @returns Object with relayer state and setters\n */\nexport function useRelayer(options: UseRelayerOptions = {}): UseRelayerReturn {\n  const { initialValue = false } = options;\n\n  const [useRelayer, setUseRelayer] = useState<boolean>(initialValue);\n\n  const toggleRelayer = useCallback(() => {\n    setUseRelayer(prev => !prev);\n  }, []);\n\n  return {\n    useRelayer,\n    setUseRelayer,\n    toggleRelayer\n  };\n}"],"mappings":";;;;;;;;;AAkBA,SAAgB,WAAW,UAA6B,IAAsB;CAC5E,MAAM,EAAE,eAAe,UAAU;CAEjC,MAAM,CAACA,cAAY,iBAAiB,SAAkB;CAEtD,MAAM,gBAAgB,kBAAkB;AACtC,iBAAc,SAAQ,CAAC;IACtB;AAEH,QAAO;EACL;EACA;EACA"}