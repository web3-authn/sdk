{"version":3,"file":"rpc.js","names":[],"sources":["../../../../src/core/types/rpc.ts"],"sourcesContent":["import { AccessKeyView, TxExecutionStatus } from \"@near-js/types\";\n\nexport const DEFAULT_WAIT_STATUS = {\n  executeAction: \"EXECUTED_OPTIMISTIC\" as TxExecutionStatus,\n  linkDeviceAddKey: \"INCLUDED_FINAL\" as TxExecutionStatus,\n  linkDeviceSwapKey: \"FINAL\" as TxExecutionStatus,\n  linkDeviceAccountMapping: \"INCLUDED_FINAL\" as TxExecutionStatus,\n  linkDeviceDeleteKey: \"INCLUDED_FINAL\" as TxExecutionStatus,\n  // See default finality settings:\n  // https://github.com/near/near-api-js/blob/99f34864317725467a097dc3c7a3cc5f7a5b43d4/packages/accounts/src/account.ts#L68\n}\n\n// Transaction and Signature types - defined as TypeScript interfaces since they're handled as JSON\nexport interface TransactionStruct {\n  signerAccount: string;\n  publicKey: {\n    keyType: number;\n    keyData: number[];\n  };\n  nonce: number;\n  receiverAccount: string;\n  blockHash: number[];\n  actions: any[]; // Actions are complex, handled as JSON\n}\n\nexport interface SignatureStruct {\n  keyType: number;\n  signatureData: number[];\n}\n\nexport interface NearRpcCallParams {\n  jsonrpc: string;\n  id: string;\n  method: string;\n  params: {\n    signed_tx_base64: string;\n    wait_until: TxExecutionStatus;\n  }\n}\n\nexport interface TransactionContext {\n  nearPublicKeyStr: string;\n  accessKeyInfo: AccessKeyView;\n  nextNonce: string;\n  txBlockHeight: string;\n  txBlockHash: string;\n}\n\nexport interface BlockInfo {\n  header: {\n    hash: string;\n    height: number;\n  };\n}\nexport interface RpcErrorData {\n  message?: string;\n}\n\nexport interface RpcError {\n  data?: RpcErrorData;\n  message?: string;\n}\n\nexport interface RpcResponse {\n  error?: RpcError;\n  result?: any;\n}\n"],"mappings":";AAEA,MAAa,sBAAsB;CACjC,eAAe;CACf,kBAAkB;CAClB,mBAAmB;CACnB,0BAA0B;CAC1B,qBAAqB"}