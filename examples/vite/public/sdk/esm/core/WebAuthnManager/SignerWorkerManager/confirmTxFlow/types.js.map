{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/core/WebAuthnManager/SignerWorkerManager/confirmTxFlow/types.ts"],"sourcesContent":["import { VRFChallenge } from '@/core/types/vrf-worker';\nimport { TransactionInputWasm } from '../../../types';\nimport { ConfirmationConfig } from '../../../types';\nimport { TransactionContext } from '../../../types/rpc';\nimport { RpcCallPayload } from '../../../types/signer-worker';\n\n// === SECURE CONFIRM TYPES ===\n\nexport interface SecureConfirmData {\n  requestId: string;\n  summary: string | object;\n  tx_signing_requests: TransactionInputWasm[]; // Array of TransactionInputWasm objects\n  intentDigest: string;\n  rpcCall: RpcCallPayload; // RPC parameters for NEAR operations and VRF generation\n  confirmationConfig?: ConfirmationConfig; // Confirmation configuration from WASM worker\n  isRegistration: boolean;\n}\n\nexport interface ConfirmationSummaryAction {\n  to: string;\n  totalAmount: string;\n}\n\nexport interface ConfirmationSummaryRegistration {\n  type: string;\n  nearAccountId: string;\n  deviceNumber: number;\n  contractId: string;\n  deterministicVrfPublicKey: string;\n}\n\n\nexport enum SecureConfirmMessageType {\n  PROMPT_USER_CONFIRM_IN_JS_MAIN_THREAD = 'PROMPT_USER_CONFIRM_IN_JS_MAIN_THREAD',\n  USER_PASSKEY_CONFIRM_RESPONSE = 'USER_PASSKEY_CONFIRM_RESPONSE',\n}\n\nexport interface SecureConfirmMessage {\n  type: SecureConfirmMessageType;\n  data: SecureConfirmData;\n}\n\nexport interface SecureConfirmDecision {\n  requestId: string;\n  intentDigest?: string;\n  confirmed: boolean;\n  credential?: any; // Serialized WebAuthn credential\n  prfOutput?: string; // Base64url-encoded PRF output\n  vrfChallenge?: VRFChallenge; // VRF challenge generated during confirmation\n  transactionContext?: TransactionContext; // NEAR data fetched during confirmation\n  // This is a private field used to close the confirmation modal\n  _confirmHandle?: { close: (confirmed: boolean) => void };\n  error?: string;\n}\n\nexport interface TransactionSummary {\n  totalAmount?: string;\n  method?: string;\n  intentDigest?: string;\n  receiverId?: string;\n  isRegistration?: boolean;\n  vrfChallenge?: any;\n  summary?: any;\n}\n\n// Payload to return to Rust WASM is snake_case\nexport interface WorkerConfirmationResponse {\n  request_id: string;\n  intent_digest?: string;\n  confirmed: boolean;\n  credential?: any;\n  prf_output?: string;\n  vrf_challenge?: VRFChallenge;     // VRF challenge generated during confirmation\n  transaction_context?: TransactionContext; // NEAR data fetched during confirmation\n  error?: string;\n}\n"],"mappings":";AAgCA,IAAY,gFAAL;AACL;AACA"}