{"version":3,"file":"checkCanRegisterUser.js","names":["WorkerRequestType","serializeRegistrationCredentialWithPRF","toEnumUserVerificationPolicy","SIGNER_WORKER_MANAGER_CONFIG","isCheckCanRegisterUserSuccess","isWorkerError","error: any"],"sources":["../../../../../../../../../../src/core/WebAuthnManager/SignerWorkerManager/handlers/checkCanRegisterUser.ts"],"sourcesContent":["\nimport { SIGNER_WORKER_MANAGER_CONFIG } from \"../../../../config\";\nimport {\n  WorkerRequestType,\n  isWorkerError,\n  isCheckCanRegisterUserSuccess,\n} from '../../../types/signer-worker';\nimport { toEnumUserVerificationPolicy } from '../../../types/authenticatorOptions';\nimport { serializeRegistrationCredentialWithPRF } from '../../credentialsHelpers';\nimport { VRFChallenge } from '../../../types/vrf-worker';\nimport type { onProgressEvents } from '../../../types/passkeyManager';\nimport type { AuthenticatorOptions } from '../../../types/authenticatorOptions';\nimport { SignerWorkerManagerContext } from '..';\n\n\nexport async function checkCanRegisterUser({\n  ctx,\n  vrfChallenge,\n  credential,\n  contractId,\n  nearRpcUrl,\n  authenticatorOptions,\n  onEvent,\n}: {\n  ctx: SignerWorkerManagerContext,\n  vrfChallenge: VRFChallenge,\n  credential: PublicKeyCredential,\n  contractId: string;\n  nearRpcUrl: string;\n  authenticatorOptions?: AuthenticatorOptions; // Authenticator options for registration check\n  onEvent?: (update: onProgressEvents) => void;\n}): Promise<{\n  success: boolean;\n  verified?: boolean;\n  registrationInfo?: {\n    credentialId: Uint8Array;\n    credentialPublicKey: Uint8Array;\n    userId: string;\n    vrfPublicKey: Uint8Array | undefined;\n  };\n  logs?: string[];\n  signedTransactionBorsh?: number[];\n  error?: string;\n}> {\n  try {\n    const response = await ctx.sendMessage<WorkerRequestType.CheckCanRegisterUser>({\n      message: {\n        type: WorkerRequestType.CheckCanRegisterUser,\n        payload: {\n          vrfChallenge: {\n            vrfInput: vrfChallenge.vrfInput,\n            vrfOutput: vrfChallenge.vrfOutput,\n            vrfProof: vrfChallenge.vrfProof,\n            vrfPublicKey: vrfChallenge.vrfPublicKey,\n            userId: vrfChallenge.userId,\n            rpId: vrfChallenge.rpId,\n            blockHeight: vrfChallenge.blockHeight,\n            blockHash: vrfChallenge.blockHash,\n          },\n          credential: serializeRegistrationCredentialWithPRF({ credential }),\n          contractId,\n          nearRpcUrl,\n          authenticatorOptions: authenticatorOptions ? {\n            userVerification: toEnumUserVerificationPolicy(authenticatorOptions.userVerification),\n            originPolicy: authenticatorOptions.originPolicy,\n          } : undefined\n        }\n      },\n      onEvent,\n      timeoutMs: SIGNER_WORKER_MANAGER_CONFIG.TIMEOUTS.TRANSACTION\n    });\n\n    if (!isCheckCanRegisterUserSuccess(response)) {\n      const errorDetails = isWorkerError(response) ? response.payload.error : 'Unknown worker error';\n      throw new Error(`Registration check failed: ${errorDetails}`);\n    }\n\n    const wasmResult = response.payload;\n    return {\n      success: true,\n      verified: wasmResult.verified,\n      registrationInfo: wasmResult.registrationInfo,\n      logs: wasmResult.logs,\n      error: wasmResult.error,\n    };\n  } catch (error: any) {\n    // Preserve the detailed error message instead of converting to generic error\n    console.error('checkCanRegisterUser failed:', error);\n    return {\n      success: false,\n      verified: false,\n      error: error.message || 'Unknown error occurred',\n      logs: [],\n    };\n  }\n}"],"mappings":";;;;;;;AAeA,eAAsB,qBAAqB,EACzC,KACA,cACA,YACA,YACA,YACA,sBACA,WAqBC;AACD,KAAI;EACF,MAAM,WAAW,MAAM,IAAI,YAAoD;GAC7E,SAAS;IACP,MAAMA,6CAAkB;IACxB,SAAS;KACP,cAAc;MACZ,UAAU,aAAa;MACvB,WAAW,aAAa;MACxB,UAAU,aAAa;MACvB,cAAc,aAAa;MAC3B,QAAQ,aAAa;MACrB,MAAM,aAAa;MACnB,aAAa,aAAa;MAC1B,WAAW,aAAa;;KAE1B,YAAYC,kEAAuC,EAAE;KACrD;KACA;KACA,sBAAsB,uBAAuB;MAC3C,kBAAkBC,0DAA6B,qBAAqB;MACpE,cAAc,qBAAqB;SACjC;;;GAGR;GACA,WAAWC,4CAA6B,SAAS;;AAGnD,MAAI,CAACC,oDAA8B,WAAW;GAC5C,MAAM,eAAeC,oCAAc,YAAY,SAAS,QAAQ,QAAQ;AACxE,SAAM,IAAI,MAAM,8BAA8B;;EAGhD,MAAM,aAAa,SAAS;AAC5B,SAAO;GACL,SAAS;GACT,UAAU,WAAW;GACrB,kBAAkB,WAAW;GAC7B,MAAM,WAAW;GACjB,OAAO,WAAW;;UAEbC,OAAY;AAEnB,UAAQ,MAAM,gCAAgC;AAC9C,SAAO;GACL,SAAS;GACT,UAAU;GACV,OAAO,MAAM,WAAW;GACxB,MAAM"}