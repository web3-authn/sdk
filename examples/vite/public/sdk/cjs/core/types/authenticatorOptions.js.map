{"version":3,"file":"authenticatorOptions.js","names":["wasmModule.UserVerificationPolicy.Required","wasmModule.UserVerificationPolicy.Preferred","wasmModule.UserVerificationPolicy.Discouraged","DEFAULT_AUTHENTICATOR_OPTIONS: AuthenticatorOptions"],"sources":["../../../../src/core/types/authenticatorOptions.ts"],"sourcesContent":["import * as wasmModule from '@/wasm_signer_worker/wasm_signer_worker';\n\n/**\n * User verification policy for WebAuthn authenticators\n *\n * @example\n * ```typescript\n * // Require user verification (PIN, fingerprint, etc.)\n * UserVerificationPolicy.Required\n *\n * // Prefer user verification but don't require it\n * UserVerificationPolicy.Preferred\n *\n * // Discourage user verification (for performance)\n * UserVerificationPolicy.Discouraged\n * ```\n */\nexport enum UserVerificationPolicy {\n  Required = 'required',\n  Preferred = 'preferred',\n  Discouraged = 'discouraged'\n}\n\n/**\n * Origin policy input for WebAuthn registration (matches WASM OriginPolicyInput struct)\n * Note: choose only one of the fields: single, all_subdomains, multiple\n */\nexport interface OriginPolicyInput {\n  single: boolean | undefined;\n  all_subdomains: boolean | undefined;\n  multiple: string[] | undefined;\n}\n\nexport const toEnumUserVerificationPolicy = (userVerification: UserVerificationPolicy | undefined): wasmModule.UserVerificationPolicy => {\n  switch (userVerification) {\n    case UserVerificationPolicy.Required:\n      return wasmModule.UserVerificationPolicy.Required;\n    case UserVerificationPolicy.Preferred:\n      return wasmModule.UserVerificationPolicy.Preferred;\n    case UserVerificationPolicy.Discouraged:\n      return wasmModule.UserVerificationPolicy.Discouraged;\n    default:\n      return wasmModule.UserVerificationPolicy.Preferred;\n  }\n};\n\nexport interface AuthenticatorOptions {\n  userVerification: UserVerificationPolicy;\n  originPolicy: OriginPolicyInput;\n}\n\n/**\n * Default authenticator options (matches contract defaults)\n */\nexport const DEFAULT_AUTHENTICATOR_OPTIONS: AuthenticatorOptions = {\n  userVerification: UserVerificationPolicy.Preferred,\n  originPolicy: {\n    single: undefined,\n    all_subdomains: true,\n    multiple: undefined\n  }\n};"],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,IAAY,4EAAL;AACL;AACA;AACA;;;AAaF,MAAa,gCAAgC,qBAA4F;AACvI,SAAQ,kBAAR;EACE,KAAK,uBAAuB,SAC1B,0DAAOA;EACT,KAAK,uBAAuB,UAC1B,0DAAOC;EACT,KAAK,uBAAuB,YAC1B,0DAAOC;EACT,QACE,0DAAOD;;;;;;AAYb,MAAaE,gCAAsD;CACjE,kBAAkB,uBAAuB;CACzC,cAAc;EACZ,QAAQ;EACR,gBAAgB;EAChB,UAAU"}