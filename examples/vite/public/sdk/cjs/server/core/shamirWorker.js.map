{"version":3,"file":"shamirWorker.js","names":["__filename","__dirname","bytes: Buffer | undefined","initWasm","configure_shamir_p","msg: VRFWorkerMessage<Shamir3PassGenerateServerKeypairRequest>","wasmHandleMessage","msg: VRFWorkerMessage<ShamirApplyServerLockRequest>","msg: VRFWorkerMessage<ShamirRemoveServerLockRequest>","get_shamir_p_b64u"],"sources":["../../../../src/server/core/shamirWorker.ts"],"sourcesContent":["// Server-side Shamir 3-pass exponent helpers.\n// Implements modular exponentiation over a shared safe prime p.\n\nimport { readFileSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport { dirname, join } from 'path';\n// @ts-ignore - WASM imports\nimport initWasm, {\n  handle_message as wasmHandleMessage,\n  configure_shamir_p,\n  get_shamir_p_b64u,\n  SHAMIR_P_B64U,\n} from '../../wasm_vrf_worker/wasm_vrf_worker.js';\nimport {\n  VRFWorkerMessage,\n  WasmVrfWorkerRequestType,\n  ShamirApplyServerLockRequest,\n  ShamirApplyServerLockResponse,\n  ShamirRemoveServerLockRequest,\n  ShamirRemoveServerLockResponse,\n  Shamir3PassGenerateServerKeypairRequest,\n} from './types';\n\nexport { SHAMIR_P_B64U, get_shamir_p_b64u };\n\n\nlet wasmInitialized = false;\nlet wasmModule: any;\n\nasync function ensureWasmInitialized(): Promise<void> {\n  if (wasmInitialized) {\n    return;\n  }\n  const __filename = fileURLToPath(import.meta.url);\n  const __dirname = dirname(__filename);\n  const candidates = [\n    join(__dirname, '../../wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n    join(__dirname, '../wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n    join(__dirname, '../../../src/wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n    join(__dirname, '../../../../src/wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n    join(__dirname, '../../../../../src/wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n    join(__dirname, '../../../../../../packages/passkey/src/wasm_vrf_worker/wasm_vrf_worker_bg.wasm'),\n  ];\n  let bytes: Buffer | undefined;\n  for (const p of candidates) {\n    try { bytes = readFileSync(p); break; } catch {}\n  }\n  if (!bytes) throw new Error('Could not find WASM file for Shamir3Pass');\n  // Suppress wasm-bindgen deprecation warning by passing an options object\n  wasmModule = await initWasm({ module_or_path: bytes });\n  wasmInitialized = true;\n}\n\nexport class Shamir3PassUtils {\n  private p_b64u: string;\n  private e_s_b64u: string;\n  private d_s_b64u: string;\n\n  constructor(opts: {\n    p_b64u?: string;\n    e_s_b64u?: string;\n    d_s_b64u?: string\n  }) {\n    this.p_b64u = opts.p_b64u ?? '';\n    this.e_s_b64u = opts.e_s_b64u ?? '';\n    this.d_s_b64u = opts.d_s_b64u ?? '';\n  }\n\n  async initialize(): Promise<{ p_b64u: string }> {\n    await ensureWasmInitialized();\n    if (!this.p_b64u) {\n      console.log('No p_b64u provided, using default');\n      let default_p_b64u = await getShamirPB64uFromWasm();\n      this.p_b64u = default_p_b64u;\n    }\n    await configure_shamir_p(this.p_b64u);\n    return {\n      p_b64u: this.p_b64u\n    };\n  }\n\n  async generateServerKeypair(): Promise<{ e_s_b64u: string; d_s_b64u: string }> {\n    await ensureWasmInitialized();\n    const msg: VRFWorkerMessage<Shamir3PassGenerateServerKeypairRequest> = {\n      type: 'SHAMIR3PASS_GENERATE_SERVER_KEYPAIR',\n      id: `srv_${Date.now()}`,\n      payload: {},\n    };\n    const res = await wasmHandleMessage(msg);\n    if (!res?.success) throw new Error(res?.error || 'generateServerKeypair failed');\n    return {\n      e_s_b64u: res.data.e_s_b64u,\n      d_s_b64u: res.data.d_s_b64u\n    };\n  }\n\n  async applyServerLock(req: ShamirApplyServerLockRequest): Promise<ShamirApplyServerLockResponse> {\n    await ensureWasmInitialized();\n    if (!this.e_s_b64u) {\n      throw new Error('Server exponent e_s_b64u not configured');\n    }\n    const msg: VRFWorkerMessage<ShamirApplyServerLockRequest> = {\n      type: 'SHAMIR3PASS_APPLY_SERVER_LOCK_KEK',\n      id: `srv_${Date.now()}`,\n      payload: {\n        e_s_b64u: this.e_s_b64u,\n        kek_c_b64u: req.kek_c_b64u\n      },\n    };\n    const res = await wasmHandleMessage(msg);\n    if (!res?.success) {\n      throw new Error(res?.error || 'applyServerLock failed');\n    }\n    return {\n      kek_cs_b64u: res.data.kek_cs_b64u\n    };\n  }\n\n  async removeServerLock(req: ShamirRemoveServerLockRequest): Promise<ShamirRemoveServerLockResponse> {\n    await ensureWasmInitialized();\n    if (!this.d_s_b64u) {\n      throw new Error('Server exponent d_s_b64u not configured');\n    }\n    const msg: VRFWorkerMessage<ShamirRemoveServerLockRequest> = {\n      type: 'SHAMIR3PASS_REMOVE_SERVER_LOCK_KEK',\n      id: `srv_${Date.now()}`,\n      payload: {\n        d_s_b64u: this.d_s_b64u,\n        kek_cs_b64u: req.kek_cs_b64u\n      },\n    };\n    const res = await wasmHandleMessage(msg);\n    if (!res?.success) {\n      throw new Error(res?.error || 'removeServerLock failed');\n    }\n    return {\n      kek_c_b64u: res.data.kek_c_b64u,\n    };\n  }\n}\n\n// Public helper to read the compiled Shamir prime p from the WASM module\nexport async function getShamirPB64uFromWasm(): Promise<string> {\n  await ensureWasmInitialized();\n  return get_shamir_p_b64u();\n}\n\n"],"mappings":";;;;;;;;;;AA0BA,IAAI,kBAAkB;AAGtB,eAAe,wBAAuC;AACpD,KAAI,gBACF;CAEF,MAAMA;CACN,MAAMC,gCAAoBD;CAC1B,MAAM,aAAa;iBACZC,aAAW;iBACXA,aAAW;iBACXA,aAAW;iBACXA,aAAW;iBACXA,aAAW;iBACXA,aAAW;;CAElB,IAAIC;AACJ,MAAK,MAAM,KAAK,WACd,KAAI;AAAE,+BAAqB;AAAI;SAAe;AAEhD,KAAI,CAAC,MAAO,OAAM,IAAI,MAAM;AAE5B,CAAa,MAAMC,gCAAS,EAAE,gBAAgB;AAC9C,mBAAkB;;AAGpB,IAAa,mBAAb,MAA8B;CAC5B,AAAQ;CACR,AAAQ;CACR,AAAQ;CAER,YAAY,MAIT;AACD,OAAK,SAAS,KAAK,UAAU;AAC7B,OAAK,WAAW,KAAK,YAAY;AACjC,OAAK,WAAW,KAAK,YAAY;;CAGnC,MAAM,aAA0C;AAC9C,QAAM;AACN,MAAI,CAAC,KAAK,QAAQ;AAChB,WAAQ,IAAI;GACZ,IAAI,iBAAiB,MAAM;AAC3B,QAAK,SAAS;;AAEhB,QAAMC,2CAAmB,KAAK;AAC9B,SAAO,EACL,QAAQ,KAAK;;CAIjB,MAAM,wBAAyE;AAC7E,QAAM;EACN,MAAMC,MAAiE;GACrE,MAAM;GACN,IAAI,OAAO,KAAK;GAChB,SAAS;;EAEX,MAAM,MAAM,MAAMC,uCAAkB;AACpC,MAAI,CAAC,KAAK,QAAS,OAAM,IAAI,MAAM,KAAK,SAAS;AACjD,SAAO;GACL,UAAU,IAAI,KAAK;GACnB,UAAU,IAAI,KAAK;;;CAIvB,MAAM,gBAAgB,KAA2E;AAC/F,QAAM;AACN,MAAI,CAAC,KAAK,SACR,OAAM,IAAI,MAAM;EAElB,MAAMC,MAAsD;GAC1D,MAAM;GACN,IAAI,OAAO,KAAK;GAChB,SAAS;IACP,UAAU,KAAK;IACf,YAAY,IAAI;;;EAGpB,MAAM,MAAM,MAAMD,uCAAkB;AACpC,MAAI,CAAC,KAAK,QACR,OAAM,IAAI,MAAM,KAAK,SAAS;AAEhC,SAAO,EACL,aAAa,IAAI,KAAK;;CAI1B,MAAM,iBAAiB,KAA6E;AAClG,QAAM;AACN,MAAI,CAAC,KAAK,SACR,OAAM,IAAI,MAAM;EAElB,MAAME,MAAuD;GAC3D,MAAM;GACN,IAAI,OAAO,KAAK;GAChB,SAAS;IACP,UAAU,KAAK;IACf,aAAa,IAAI;;;EAGrB,MAAM,MAAM,MAAMF,uCAAkB;AACpC,MAAI,CAAC,KAAK,QACR,OAAM,IAAI,MAAM,KAAK,SAAS;AAEhC,SAAO,EACL,YAAY,IAAI,KAAK;;;AAM3B,eAAsB,yBAA0C;AAC9D,OAAM;AACN,QAAOG"}